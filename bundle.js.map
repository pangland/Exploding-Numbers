{"version":3,"sources":["webpack:///webpack/bootstrap f90acbcdc30c535792eb","webpack:///./sound.js","webpack:///./lib/exploding_numbers.js","webpack:///./lib/game.js","webpack:///./lib/number.js","webpack:///./lib/equations.js","webpack:///./lib/game_view.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;AC7DA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AAAA;AAAA;;;;;;;;;;;;AChBA;AACA;AACgB;AAChB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;ACjJD;AACA;AACgB;;AAEhB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,oCAAoC;AACvD;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,mBAAmB,iCAAiC;AACpD;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA,4BAA4B,gDAAgD;AAC5E;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;ACpOA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;;AC7EA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uBAAuB,WAAW,KAAK,YAAY;AACnD;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,yBAAyB,WAAW,KAAK,YAAY;AACrD;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,mBAAmB;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,yBAAyB,WAAW,KAAK,YAAY;AACrD,KAAK;AACL;AACA;AACA,yBAAyB,WAAW,KAAK,YAAY;AACrD;AACA;;AAEA;AACA;AACA;AACA;AACA,uBAAuB,WAAW,KAAK,YAAY;AACnD;AACA;;AAEA;;;;;;;;ACzFA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,QAAQ;;AAER;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA","file":"./bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap f90acbcdc30c535792eb","const music = new Audio('./assets/sounds/Elevator-music.mp3');\nmusic.volume = .5;\nmusic.loop = true;\n\nconst clickSound = new Audio('./assets/sounds/click-effect.mp3');\nmusic.volume = .2;\n\nexport const sound = {\n  playMusic() {\n    music.play();\n  },\n\n  playClickSound() {\n    clickSound.load();\n    clickSound.play();\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./sound.js\n// module id = 0\n// module chunks = 0","import Game from './game.js';\nimport GameView from './game_view.js';\nimport { sound } from '../sound.js';\n// import soundplayer from 'sound-player';\n// import player from 'play-sound';\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const canvas = document.getElementById(\"game-canvas\");\n  canvas.width = 1000;\n  canvas.height = 550;\n\n  const ctx = canvas.getContext(\"2d\");\n  ctx.fillStyle = \"black\";\n  ctx.fillRect(0, 0, 1000, 550);\n  ctx.fillStyle = \"white\";\n  ctx.font = \"14pt Arial\";\n  ctx.fillText(\"s: Skips an equation, but remember that difficulty goes up with each skipped equation\", 70, 100);\n  ctx.fillText(\"p: pauses/unpauses the game and shows controls\", 70, 120);\n  ctx.fillText(\"r: resets the game\", 70, 140);\n\n\n  function handleStartAndEnd() {\n    startGame();\n  }\n\n  canvas.addEventListener(\"click\", handleStartAndEnd);\n\n  function startGame() {\n    debugger;\n    const game = new Game();\n    function handleClick() {\n      game.handleClick(event, ctx);\n    }\n\n    canvas.removeEventListener('click', handleStartAndEnd);\n    canvas.addEventListener(\"click\", handleClick);\n\n    document.addEventListener('keypress', (e) => {\n      // debugger;\n      switch (e.key) {\n        case \"s\":\n          game.newEquation();\n          break;\n        case \"r\":\n          // canvas.removeEventListener('click', handleClick);\n          // handleStartAndEnd();\n          // canvas.removeEventListener('keypress', e);\n          break;\n      }\n    });\n\n    sound.playMusic();\n\n    new GameView(game, ctx).start(() => {\n      ctx.color = 'white';\n\n      ctx.fillStyle = \"black\";\n      ctx.fillRect(400, 0, 600, 50);\n      ctx.fillStyle = \"white\";\n      ctx.strokeStyle = \"black\";\n      ctx.font = '17pt arial';\n\n      if (game.won()) {\n        ctx.fillText(\"Expression: Who's awesome?\", 350, 20);\n        ctx.fillText(\"Answer: You're awesome!\", 350, 45);\n        ctx.font = '50pt Arial';\n        ctx.fillText('YOU SAVED MATH!', 170, 150);\n        ctx.strokeText('YOU SAVED MATH!', 170, 150);\n      } else {\n        ctx.fillStyle = \"black\";\n        ctx.fillRect(40, 100, 960, 150);\n        ctx.fillStyle = \"white\";\n        ctx.fillText('Expression: Did you just fail?', 350, 20);\n        ctx.fillText(\"Answer: You did.\", 350, 45);\n        ctx.font = '50pt Arial';\n        ctx.fillText('Your math needs work', 150, 150);\n        ctx.strokeText('Your math needs work', 150, 150);\n      }\n\n      ctx.fillText('Click anywhere to play again!', 50, 225);\n      ctx.strokeText('Click anywhere to play again!', 50, 225);\n\n      canvas.removeEventListener('click', handleClick);\n      canvas.addEventListener(\"click\", handleStartAndEnd);\n    });\n  }\n\n  const sketchpad = document.getElementById(\"sketchpad-canvas\");\n  sketchpad.width = 300;\n  sketchpad.height = 550;\n\n  const ctx2 = sketchpad.getContext(\"2d\");\n  ctx2.fillStyle = \"gray\";\n  ctx2.fillRect(0, 0, 300, 550);\n  ctx2.fillStyle = \"blue\";\n  ctx2.font = \"20pt Arial\";\n  ctx2.fillText(\"Sketchpad\", 70, 50);\n\n  sketchpad.addEventListener('mousedown', activatePencil);\n  sketchpad.addEventListener('mousemove', movePencil);\n  sketchpad.addEventListener('mouseup', deactivatePencil);\n  sketchpad.addEventListener('mouseleave', deactivatePencil);\n\n  let drawStuff = false;\n  let start = null;\n\n  function activatePencil() {\n    drawStuff = true;\n    draw();\n  }\n\n  function movePencil() {\n    if (drawStuff) {\n      draw();\n    }\n  }\n\n  function deactivatePencil() {\n    drawStuff = false;\n    start = null;\n  }\n\n  function draw() {\n    ctx2.lineWidth = 5;\n    ctx2.strokeStyle = 'white';\n    ctx2.beginPath();\n    if (start) {\n      ctx2.moveTo(start[0], start[1]);\n    }\n\n    ctx2.lineTo(event.offsetX, event.offsetY);\n    ctx2.closePath();\n    ctx2.stroke();\n    start = [event.offsetX, event.offsetY];\n  }\n\n  document.getElementById(\"clear\").addEventListener(\"click\", clearSketchPad);\n\n  function clearSketchPad() {\n    ctx2.fillStyle = \"gray\";\n    ctx2.fillRect(0, 0, 300, 550);\n    ctx2.fillStyle = \"blue\";\n    ctx2.font = \"20pt Arial\";\n    ctx2.fillText(\"Sketchpad\", 70, 50);\n  }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/exploding_numbers.js\n// module id = 1\n// module chunks = 0","import Number from './number.js';\nimport Equations from './equations.js';\nimport { sound } from '../sound.js';\n\nclass Game {\n  constructor() {\n    this.allNumberBlocks = [[], [], [], [], [], [], [], [], [], []];\n    this.fallingNumberBlocks = [[], [], [], [], [], [], [], [], [], []];\n    this.staticNumberBlocks = [[], [], [], [], [], [], [], [], [], []];\n\n    this.horPositions = [0, 100, 200, 300, 400, 500, 600, 700, 800, 900];\n    this.blocksPerColumn = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n    this.selectedNumbers = [];\n\n    this.selectedNumbers = [];\n    this.equations = new Equations();\n    this.generatedNumberCount = 0;\n  }\n\n  won() {\n    let truthiness = true;\n    for (let i = 0; i < this.staticNumberBlocks.length; i++) {\n      if (!truthiness) break;\n      if (this.staticNumberBlocks[i].length !== 0) {\n        truthiness = false;\n      }\n    }\n\n    return truthiness;\n  }\n\n  over() {\n    let truthiness = true;\n    for (let i = 0; i < this.blocksPerColumn.length; i++) {\n      if (!truthiness) break;\n      if (this.blocksPerColumn[i] < 5) {\n        truthiness = false;\n      }\n    }\n\n    return truthiness;\n  }\n\n  fillBottomRow() {\n    const vertPosition = 450;\n    this.horPositions.forEach((pos, idx) => {\n      const newNumber = new Number([pos, vertPosition]);\n      this.allNumberBlocks[idx].push(newNumber);\n      this.staticNumberBlocks[idx].push(newNumber);\n      this.incrementBlocksPerColumn(idx);\n    });\n\n    this.newEquation();\n  }\n\n  createNumber() {\n    const randomColumn = this.randomStartingPos();\n    this.incrementBlocksPerColumn(Math.round(randomColumn / 100));\n    const newNumber = new Number([randomColumn, 50]);\n    this.generatedNumberCount += 1;\n    this.fallingNumberBlocks[randomColumn / 100].push(newNumber);\n    this.allNumberBlocks[randomColumn / 100].push(newNumber);\n  }\n\n  incrementBlocksPerColumn(columnNumber) {\n    this.blocksPerColumn[columnNumber] = this.blocksPerColumn[columnNumber] + 1;\n  }\n\n  decrementBlocksPerColumn(columnNumber) {\n    this.blocksPerColumn[columnNumber] -= 1;\n  }\n\n  randomStartingPos() {\n    const filteredPositions = [];\n    this.horPositions.forEach((column, idx) => {\n      if (!this.fallingNumberBlocks[idx][0] && this.blocksPerColumn[idx] < 5) {\n        filteredPositions.push(this.horPositions[idx]);\n      } else if (this.blocksPerColumn[idx] < 5 && this.fallingNumberBlocks[idx].slice(-1)[0].pos[1] >= 150) {\n        filteredPositions.push(this.horPositions[idx]);\n      }\n    });\n    return filteredPositions[Math.floor(Math.random() * 10) % filteredPositions.length];\n  }\n\n  move() {\n    this.fallingNumberBlocks.forEach((column, idx) => {\n      while (column[0] && column[0]\n        .checkCollision(this.staticNumberBlocks[idx].slice(-1)[0])) {\n        column[0].syncPosition(450 - 100 * this.staticNumberBlocks[idx].length);\n        this.staticNumberBlocks[idx].push(column.shift());\n      }\n\n      if (column[0]) column[0].move();\n      column.slice(1).forEach((number, jdx) => {\n        if (!number.checkCollision(this.fallingNumberBlocks[idx][jdx])) {\n          number.move();\n        }\n      });\n    });\n  }\n\n  draw(ctx) {\n    const numbers = this.selectedNumbers.map((num) => num.number);\n\n    ctx.font = '17pt Arial';\n    ctx.fillStyle = \"black\";\n    ctx.fillRect(0, 0, 1000, 550);\n    ctx.fillStyle = \"white\";\n    ctx.fillText(\"Answer: \" + numbers.join(''), 400, 45);\n\n    this.allNumberBlocks.forEach((numberColumn) => {\n      numberColumn.forEach((number) => number.draw(ctx));\n    });\n    this.equations.draw(ctx);\n  }\n\n  handleClick(e, ctx) {\n    this.allNumberBlocks.forEach((columns) => {\n      columns.forEach((number) => {\n        if (number.isClicked(e.offsetX, e.offsetY)) {\n          sound.playClickSound();\n          this.handleNumber(number);\n          this.correctMatch();\n          this.draw(ctx);\n        }\n      });\n    });\n  }\n\n  handleNumber(number) {\n    number.toggleColor();\n    const indexOfNumber = this.selectedNumbers.indexOf(number);\n\n    if (indexOfNumber === -1) {\n      this.selectedNumbers.push(number);\n    } else {\n      this.selectedNumbers.splice(indexOfNumber, 1);\n    }\n  }\n\n  correctMatch() {\n    let numberProperty = this.selectedNumbers.map((number) => {\n      return number.number;\n    });\n\n    if (numberProperty.join('') === this.equationSolution.join('')) {\n      this.removeNumbers();\n      this.newEquation();\n    }\n  }\n\n  removeNumbers() {\n    this.staticNumberBlocks.forEach((column, idx) => {\n      let i = 0;\n      while (i < column.length) {\n        let selectedCount = this.selectedNumbers.length;\n        this.selectedNumbers.forEach((number, jdx) => {\n          const relevantIndex = this.staticNumberBlocks[idx].indexOf(number);\n          if (relevantIndex !== -1) {\n            this.selectedNumbers.splice(jdx, 1);\n            this.handleStaticDeletion(idx, relevantIndex);\n            this.decrementBlocksPerColumn(idx);\n          }\n        });\n        if (selectedCount === this.selectedNumbers.length) {\n          i++;\n        }\n      }\n    });\n\n    if (this.selectedNumbers.length > 0) {\n      this.fallingNumberBlocks.forEach((column, idx) => {\n        let i = 0;\n        while (i < column.length) {\n          let selectedCount = this.selectedNumbers.length;\n          this.selectedNumbers.forEach((number, jdx) => {\n            const relevantIndex = this.fallingNumberBlocks[idx].indexOf(number);\n            if (relevantIndex !== -1) {\n              this.selectedNumbers.splice(jdx, 1);\n              this.handleFallingDeletion(idx, relevantIndex);\n              this.decrementBlocksPerColumn(idx);\n            }\n          });\n          if (selectedCount === this.selectedNumbers.length) {\n            i++;\n          }\n        }\n      });\n    }\n    this.selectedNumbers = [];\n  }\n\n  handleStaticDeletion(outerIndex, innerIndex) {\n    this.staticNumberBlocks[outerIndex].splice(innerIndex, 1);\n    this.allNumberBlocks[outerIndex].splice(innerIndex, 1);\n\n    for (let i = innerIndex; i < this.staticNumberBlocks[outerIndex].length; i++) {\n      this.staticNumberBlocks[outerIndex][i].downshift();\n    }\n  }\n\n  handleFallingDeletion(outerIndex, innerIndex) {\n    this.fallingNumberBlocks[outerIndex].splice(innerIndex, 1);\n\n    const staticsInRow = this.staticNumberBlocks[outerIndex].length;\n\n    this.allNumberBlocks[outerIndex].splice(innerIndex + staticsInRow, 1);\n  }\n\n  newEquation() {\n    let allNumbers = [].concat.apply([], this.allNumberBlocks);\n    allNumbers = allNumbers.sort(() => Math.random());\n    const numbersToGrab = Math.floor(Math.random() * allNumbers.length % 2) + 1;\n\n    let equationSolution = allNumbers.slice(0, numbersToGrab);\n    equationSolution = equationSolution.map((number) => {\n      return number.number;\n    });\n\n    while (equationSolution[0] === 0 && equationSolution.length > 1) {\n      equationSolution = equationSolution.slice(1);\n    }\n    this.equationSolution = equationSolution;\n\n    this.equations.generateNewEquation(equationSolution);\n  }\n}\n\nexport default Game;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/game.js\n// module id = 2\n// module chunks = 0","const colors = [\"pink\", \"red\", \"blue\", \"lightblue\", \"teal\", \"yellow\", \"green\"];\nconst numbers = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\n\nclass Number {\n  constructor(pos) {\n    this.pos = pos;\n    this.vel = this.randomVel();\n    this.color = this.randomColor();\n    this.selected = false;\n\n    this.number = Math.floor(Math.random() * 10);\n  }\n\n  draw(ctx) {\n    ctx.fillStyle = this.selected ? \"gray\" : this.color;\n    ctx.font = '17pt Arial';\n\n    ctx.beginPath();\n    ctx.moveTo(this.pos[0] + 10, this.pos[1]);\n    ctx.lineTo(this.pos[0] + 90, this.pos[1]);\n    ctx.quadraticCurveTo(this.pos[0] + 100, this.pos[1], this.pos[0] + 100, this.pos[1] + 10);\n    ctx.lineTo(this.pos[0] + 100, this.pos[1] + 90);\n    ctx.quadraticCurveTo(this.pos[0] + 100, this.pos[1] + 100, this.pos[0] + 90, this.pos[1] + 100);\n    ctx.lineTo(this.pos[0] + 10, this.pos[1] + 100);\n    ctx.quadraticCurveTo(this.pos[0], this.pos[1] + 100, this.pos[0], this.pos[1] + 90);\n    ctx.lineTo(this.pos[0], this.pos[1] + 10);\n    ctx.quadraticCurveTo(this.pos[0], this.pos[1], this.pos[0] + 10, this.pos[1]);\n    ctx.stroke();\n    ctx.fill();\n\n    ctx.fillStyle = \"black\";\n    ctx.fillText(this.number, this.pos[0] + 43, this.pos[1] + 60);\n  }\n\n  move() {\n    this.pos[1] = this.pos[1] + this.vel;\n  }\n\n  randomVel() {\n    let randomBase = Math.random();\n    randomBase = randomBase < .1 ? .1 : randomBase;\n\n    return randomBase * 2;\n  }\n\n  randomColor() {\n    return colors[Math.floor(Math.random() * 10) % colors.length];\n  }\n\n  checkCollision(otherNum) {\n    if (typeof otherNum === \"undefined\") {\n      return this.pos[1] + this.vel + 100 > 550;\n    } else {\n      return this.pos[1] + this.vel + 100 > otherNum.pos[1];\n    }\n  }\n\n  syncPosition(height) {\n    this.pos[1] = height;\n  }\n\n  isClicked(mouseX, mouseY) {\n    const pos = this.pos;\n    const verticalMatch = mouseY >= pos[1] && mouseY < pos[1] + 100;\n    const horizontalMatch = mouseX >= pos[0] && mouseX < pos[0] + 100;\n    return verticalMatch && horizontalMatch;\n  }\n\n  downshift() {\n    this.pos[1] = this.pos[1] + 100;\n  }\n\n  toggleColor() {\n    this.selected = this.selected ? false : true;\n  }\n}\n\nexport default Number;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/number.js\n// module id = 3\n// module chunks = 0","class Equations {\n  constructor() {\n    this.equationCount = 0;\n    this.operations = ['+', '-', '*', '/'];\n    this.equation = \"\";\n  }\n\n  draw(ctx) {\n    ctx.fillStyle = \"white\";\n    ctx.fillText('Expression: ' + this.equation, 400, 20);\n  }\n\n  generateNewEquation(numberArray) {\n    this.equationCount++;\n    let solution;\n\n    if (numberArray.length > 1) {\n      solution = parseInt(numberArray.join(''));\n    } else {\n      solution = numberArray[0];\n    }\n\n    const operation = this.operations[Math.floor(Math.random() * 4)];\n    switch (operation) {\n      case '+':\n        this.add(solution);\n        break;\n      case '-':\n        this.subtract(solution);\n        break;\n      case '*':\n        this.multiply(solution);\n        break;\n      case '/':\n        if (this.equationCount < 5) {\n          this.add(solution);\n        } else if (this.equationCount < 10) {\n          this.multiply(solution);\n        } else {\n          this.divide(solution);\n        }\n        break;\n    }\n  }\n\n  add(solution) {\n    const firstValue = Math.floor(Math.random() * solution);\n    const secondValue = solution - firstValue;\n    this.equation = `${firstValue} + ${secondValue}`;\n  }\n\n  subtract(solution) {\n    const firstValue = Math.floor(Math.random() * 5 * this.equationCount + solution);\n    const secondValue = firstValue - solution;\n    if (firstValue > 100) {\n      this.add(solution);\n    } else {\n      this.equation = `${firstValue} - ${secondValue}`;\n    }\n  }\n\n  multiply(solution) {\n    const factors = [];\n    if (solution > 0) factors.push(1);\n    for (let i = 2; i <= solution / 2; i++) {\n      if (solution % i === 0) {\n        factors.push(i);\n      }\n    }\n\n    if (solution === 0) {\n      const firstValue = Math.floor(Math.random() * 3 * this.equationCount);\n      const secondValue = 0;\n      this.equation = `${firstValue} * ${secondValue}`;\n    } else {\n      const firstValue = factors[Math.floor(Math.random() * factors.length)];\n      const secondValue = solution / firstValue;\n      this.equation = `${firstValue} * ${secondValue}`;\n    }\n  }\n\n  divide(solution) {\n    const firstValue = solution * (Math\n      .floor(Math.random() * this.equationCount + 1));\n    const secondValue = firstValue === 0 ? 1 : firstValue / solution;\n    this.equation = `${firstValue} / ${secondValue}`;\n  }\n}\n\nexport default Equations;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/equations.js\n// module id = 4\n// module chunks = 0","class GameView {\n  constructor(game, ctx) {\n    this.game = game;\n    this.ctx = ctx;\n  }\n\n  start(callback) {\n    function activateCallback() {\n      clearInterval(gameInterval);\n      clearInterval(moveInterval);\n      callback();\n    }\n\n    let timer = 4000;\n    let timeBetweenBlocks = 0;\n    this.game.fillBottomRow();\n    this.game.draw(this.ctx);\n\n\n    document.addEventListener('keypress', (e) => {\n      if (e.key === \"r\") {\n        document.removeEventListener('keypress', e);\n        activateCallback();\n      }\n    });\n    // const gameInterval = setInterval(() => {\n    //   this.game.move();\n    //   this.game.createNumber();\n    //   this.game.draw(this.ctx);\n    // }, 4000);\n\n    const gameInterval = setInterval(() => {\n      if (timer <= timeBetweenBlocks) {\n        this.game.move();\n        this.game.createNumber();\n        this.game.draw(this.ctx);\n        const power = this.game.generatedNumberCount * -.05;\n        timer = 1000 + Math.random() * 2000 + 2000 * Math.pow(Math.E, power);\n        timeBetweenBlocks = 0;\n      } else {\n        timeBetweenBlocks += 100;\n      }\n    }, 100);\n\n    // const gameTwoInterval = () => {\n    //   setTimeout(() => {\n    //     this.game.move();\n    //     this.game.createNumber();\n    //     this.game.draw(this.ctx);\n    //   }, 4000);\n    //\n    //   if (!this.game.won() && !this.game.over()) {\n    //     gameTwoInterval();\n    //   }\n    // };\n\n    const moveInterval = setInterval(() => {\n      this.game.move();\n      this.game.draw(this.ctx);\n      if (this.game.won() || this.game.over()) {\n        activateCallback();\n      }\n    }, 10);\n  }\n}\n\nexport default GameView;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/game_view.js\n// module id = 5\n// module chunks = 0"],"sourceRoot":""}